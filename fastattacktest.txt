function Click()
game:GetService('VirtualUser'):CaptureController()
game:GetService('VirtualUser'):Button1Down(Vector2.new(0,1,0,1))
end

local Fast_Attack = true
local UsefastattackPlayers = true
local DamageAura = true
local NoAttackAnimation = true
local DmgAttack = game:GetService("ReplicatedStorage").Assets.GUI:WaitForChild("DamageCounter")
local PC = require(game.Players.LocalPlayer.PlayerScripts.CombatFramework.Particle)
local RL = require(game:GetService("ReplicatedStorage").CombatFramework.RigLib)
local oldRL = RL.wrapAttackAnimationAsync

RL.wrapAttackAnimationAsync = function(a, b, c, d, func)
    if not NoAttackAnimation then
        return oldRL(a, b, c, 60, func)
    end

    local Hits = {}
    local Client = game.Players.LocalPlayer
    local Characters = game:GetService("Workspace").Characters:GetChildren()
    for _, v in pairs(Characters) do
        local Human = v:FindFirstChildOfClass("Humanoid")
        if v.Name ~= Client.Name and Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < 65 then
            table.insert(Hits, Human.RootPart)
        end
    end
    local Enemies = game:GetService("Workspace").Enemies:GetChildren()
    for _, v in pairs(Enemies) do
        local Human = v:FindFirstChildOfClass("Humanoid")
        if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < 65 then
            table.insert(Hits, Human.RootPart)
        end
    end
    a:Play(0.01, 0.01, 0.01)
    pcall(func, Hits)
end

local function getAllBladeHits(size)
    local Hits = {}
    local Client = game.Players.LocalPlayer
    for _, v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
        local Human = v:FindFirstChildOfClass("Humanoid")
        if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < size + 5 then
            table.insert(Hits, Human.RootPart)
        end
    end
    return Hits
end

local function getAllBladeHitsPlayers(size)
    local Hits = {}
    local Client = game.Players.LocalPlayer
    for _, v in pairs(game:GetService("Workspace").Characters:GetChildren()) do
        local Human = v:FindFirstChildOfClass("Humanoid")
        if v.Name ~= Client.Name and Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < size + 5 then
            table.insert(Hits, Human.RootPart)
        end
    end
    return Hits
end

local CombatFramework = require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework"))
local CombatFrameworkR = getupvalues(CombatFramework)[2]
local RigEven = game:GetService("ReplicatedStorage").RigControllerEvent
local AttackAnim = Instance.new("Animation")
local AttackCoolDown = 0
local cooldowntickFire = 0
local MaxFire = 1000
local FireCooldown = 0.02
local FireL = 0

local function CancelCoolDown()
    local ac = CombatFrameworkR.activeController
    if ac and ac.equipped then
        AttackCoolDown = tick() + FireCooldown + ((FireL / MaxFire) * 0.3)
        RigEven:FireServer("weaponChange", ac.currentWeaponModel.Name)
        FireL = FireL + 1
        task.delay(FireCooldown + ((FireL + 0.3) / MaxFire * 0.3), function()
            FireL = FireL - 1
        end)
    end
end

local function AttackFunction(typef)
    local ac = CombatFrameworkR.activeController
    if ac and ac.equipped then
        local bladehit = {}
        if typef == 1 then
            bladehit = getAllBladeHits(60)
        elseif typef == 2 then
            bladehit = getAllBladeHitsPlayers(65)
        else
            for _, v in pairs(getAllBladeHits(55)) do
                table.insert(bladehit, v)
            end
            for _, v in pairs(getAllBladeHitsPlayers(55)) do
                table.insert(bladehit, v)
            end
        end
        if #bladehit > 0 then
            pcall(function() ac.attack() end)
            if tick() > AttackCoolDown then
                CancelCoolDown()
            end
            if tick() - cooldowntickFire > 0.1 then
                ac.timeToNextAttack = 0
                ac.hitboxMagnitude = 60
                pcall(function() ac.attack() end)
                cooldowntickFire = tick()
            end
            local animId = ac.anims.basic[3] or ac.anims.basic[2]
            AttackAnim.AnimationId = animId
            local StartP = ac.humanoid:LoadAnimation(AttackAnim)
            StartP:Play(0.01, 0.01, 0.01)
            RigEven:FireServer("hit", bladehit, animId and 3 or 2, "")
            task.delay(0.01, function() StartP:Stop() end)
        end
    end
end

function CheckStun()
    local stun = game.Players.LocalPlayer.Character:FindFirstChild("Stun")
    return stun and stun.Value ~= 0 or false
end

spawn(function()
    while game:GetService("RunService").Stepped:Wait() do
        local ac = CombatFrameworkR.activeController
        if ac and ac.equipped and not CheckStun() then
            if NeedAttacking and Fast_Attack then
                pcall(function() AttackFunction(1) end)
            elseif DamageAura then
                pcall(function() AttackFunction(3) end)
            elseif UsefastattackPlayers and Fast_Attack then
                pcall(function() AttackFunction(2) end)
            elseif NeedAttacking and not Fast_Attack then
                ac.hitboxMagnitude = 55
                pcall(function() ac.attack() end)
            end
        end
    end
end)

game.Players.LocalPlayer.Idled:connect(function()
    game:GetService("VirtualUser"):Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    wait(1)
    game:GetService("VirtualUser"):Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)

function inmyselfss(name)
    local backpackItem = game.Players.LocalPlayer.Backpack:FindFirstChild(name)
    if backpackItem then return backpackItem end

    for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("Tool") and v.Name == name then
            return v
        end
    end
    return game.Players.LocalPlayer.Character:FindFirstChild(name)
end

task.delay(15, function()
    if hookfunction and not islclosure(hookfunction) then
        workspace._WorldOrigin.ChildAdded:Connect(function(v)
            if v.Name == 'DamageCounter' then v.Enabled = false end
        end)

        hookfunction(require(game.ReplicatedStorage.GuideModule).ChangeDisplayedNPC, function() end)

        repeat
            local success = pcall(function()
                for _, v in pairs(getupvalues(CombatFrameworkR)[2].activeController.data) do
                    if typeof(v) == 'function' then hookfunction(v, function() end) end
                end
            end)
            task.wait(1.5)
        until success
    end
end)

task.spawn(function()
    while task.wait() do
        pcall(function()
            for _, v in pairs(game.Workspace.Enemies:GetChildren()) do
                local enemyHumanoid = v:FindFirstChild("Humanoid")
                local enemyRoot = v:FindFirstChild("HumanoidRootPart")

                if enemyHumanoid and enemyRoot and enemyHumanoid.Health > 0 then
                    if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - enemyRoot.Position).Magnitude <= 125 then
                        repeat
                            task.wait()
                            Click()
                            NeedAttacking = true
                        until (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - enemyRoot.Position).Magnitude > 125
                            or not v.Parent or enemyHumanoid.Health <= 0
                    end
                end
            end
        end)
    end
end)